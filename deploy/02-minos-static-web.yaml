---
- hosts: minos-static-web
  vars_files:
    - vars.yaml

  tasks:
   - name: Add upstream stable nginx repository
     apt_repository: repo='ppa:nginx/stable' state=present validate_certs=no
     register: ppastable

   - name: Install nginx
     apt: pkg=nginx state=installed update_cache=true install_recommends=no
     when: ppastable|success
     register: nginxinstalled
     notify:
      - Start nginx

   - name: Add nginx to the boot secuence
     when: nginxinstalled|success
     #I don't trust the service module
     shell: update-rc.d nginx defaults

   - name: Add base nginx configuration
     when: nginxinstalled|success
     template: src=files/etc.nginx.conf.d.misc.conf dest=/etc/nginx/conf.d/misc.conf owner=root group=root

   - name: Disable default site
     when: nginxinstalled|success
     file: dest=/etc/nginx/sites-enabled/default state=absent
     notify:
      - Reload nginx

   - name: Add custom site config
     template: src=files/s.minos.io.j2 dest=/etc/nginx/sites-available/{{domain}}.conf owner=root group=root
     when: nginxinstalled|success
     register: customconfig
     notify:
      - Reload nginx

   - name: Enable custom site config
     when: customconfig|success
     file: src=/etc/nginx/sites-available/{{domain}}.conf dest=/etc/nginx/sites-enabled/{{domain}}.conf state=link

   - name: Add site
     when: customconfig|success
     command: rsync -avz {{buildroot}}/site/ {{wwwroot}}

   - name: Set appropiate permitions to {{wwwroot}}
     when: customconfig|success
     file: path={{wwwroot}} state=directory owner=www-data group=www-data recurse=yes

   - name: Add static binary repositories
     when: customconfig|success
     file: src={{buildroot}}/{{item}} dest={{wwwroot}}/archive/{{item}} state=link owner=www-data group=www-data
     with_items:
        - bifrost
        - morpheus
        - rlsd2
        - misc

   - name: Add robot.txt file
     template: src=files/robots.txt dest={{wwwroot}}/robots.txt owner=www-data group=www-data

   - name: Restart nginx
     shell: service nginx restart

  handlers:
   - name: Start nginx
     service: name=nginx state=started

   - name: Reload nginx
     service: name=nginx state=reloaded
